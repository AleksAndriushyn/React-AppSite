{"version":3,"sources":["Components/Profile/ProfileInfo/ProfileForm.module.css","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/ProfileInfo/ProfileStatus.module.css","Components/Profile/ProfileInfo/ProfileBlock.module.css","Components/Profile/MyPosts/AddPostForm.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/ProfileInfo/ProfileStatus.jsx","Components/Profile/ProfileInfo/Contact.jsx","Components/Profile/ProfileInfo/ProfileBlock.jsx","Components/Profile/ProfileInfo/ProfileForm.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/MyPosts/AddPostForm.jsx","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatus","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","statusBlock","onDoubleClick","statusChange","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","Contact","contactTitle","contactValue","contact","ProfileBlock","profile","isOwner","changeToEditMode","profileBlock","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","map","key","btnBlock","editInfoBtn","onClick","ProfileReduxForm","reduxForm","form","handleSubmit","error","onSubmit","p","profileForm","createField","Input","type","Textarea","changeContact","saveBtn","style","formSummaryError","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionBlock","imgBlock","mainPhoto","src","photos","large","userPhoto","changePhoto","target","files","length","infoBlock","initialValues","formData","then","maxLength10","maxLengthCreator","postForm","postText","Field","validate","required","component","name","placeholder","addPostBtn","Post","item","itemImg","itemMessage","message","itemLikes","likesCounter","MyPosts","React","memo","PostElements","posts","id","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","ProfilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","getProfile","getStatus","updateProfile","prevProps","Component","compose","Auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.b7431a6e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileForm\":\"ProfileForm_profileForm__2bxzt\",\"changeContact\":\"ProfileForm_changeContact__1MJlS\",\"contact\":\"ProfileForm_contact__2pLCD\",\"saveBtn\":\"ProfileForm_saveBtn__3owiJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__dJfuW\",\"imgBlock\":\"ProfileInfo_imgBlock__1bnqL\",\"mainPhoto\":\"ProfileInfo_mainPhoto__29CDP\",\"changePhoto\":\"ProfileInfo_changePhoto__3dlKP\",\"infoBlock\":\"ProfileInfo_infoBlock__3rDv_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusBlock\":\"ProfileStatus_statusBlock__DQFdj\",\"statusChange\":\"ProfileStatus_statusChange__2-_7v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileBlock\":\"ProfileBlock_profileBlock__OUl-X\",\"btnBlock\":\"ProfileBlock_btnBlock__2dSVA\",\"editInfoBtn\":\"ProfileBlock_editInfoBtn__345BM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postForm\":\"AddPostForm_postForm__2aSMx\",\"postText\":\"AddPostForm_postText__3c7Fo\",\"addPostBtn\":\"AddPostForm_addPostBtn__37Ajm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1zVhW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__25Ox6\",\"itemImg\":\"Post_itemImg__22juu\",\"itemMessage\":\"Post_itemMessage__2_wsI\",\"itemLikes\":\"Post_itemLikes__1PIBa\"};","import React, { useEffect, useState } from 'react';\r\nimport s from './ProfileStatus.module.css';\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n\t}\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div className={s.statusBlock}>\r\n            { !editMode &&\r\n                <div>\r\n                    <b>Status: </b> <span onDoubleClick={activateEditMode}>{props.status || \"----\"}</span>\r\n                </div>\r\n            }\r\n            { editMode &&\r\n                <div className={s.statusChange}>\r\n                    <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )   \r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport s from './ProfileForm.module.css';\r\n\r\nexport const Contact = ({ contactTitle, contactValue }) => {\r\n    return <div className={s.contact}> <b>{contactTitle}: </b>{contactValue}</div>\r\n}","import React from 'react';\r\nimport { Contact } from './Contact';\r\nimport s from './ProfileBlock.module.css';\r\n\r\nexport const ProfileBlock = ({ profile, isOwner, changeToEditMode }) => {\r\n    return <div>\r\n        <div className={s.profileBlock}>\r\n            <div>\r\n                <b>Full name:</b> {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job:</b> {profile.lookingForAJob ? \"Yes\" : \"No\"}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n                <div>\r\n                    <b>Skills:</b> {profile.lookingForAJobDescription}\r\n                </div>\r\n            }\r\n            <div>\r\n                <b>About me:</b> {profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n                    return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n                })}\r\n            </div>\r\n        </div>\r\n        <div className={s.btnBlock}>\r\n            {isOwner &&\r\n                <div className={s.editInfoBtn}>\r\n                    <button onClick={changeToEditMode}>\r\n                        Edit\r\n                    </button>\r\n                </div>\r\n            }\r\n        </div>\r\n        \r\n    </div>\r\n}","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { createField, Input, Textarea } from '../../common/FormControls/FormControls';\r\nimport style from './../../common/FormControls/FormControls.module.css';\r\nimport p from './ProfileForm.module.css';\r\n\r\nconst ProfileForm = ({ handleSubmit, profile, error }) => {\r\n    return <form onSubmit={handleSubmit} className={p.profileForm}>\r\n        <div>\r\n            <b>Full name:</b> {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job:</b> {createField(\"\", \"lookingForAJob\", [], Input, {type:\"checkbox\"})}\r\n        </div>\r\n        <div>\r\n            <b>Skills:</b>\r\n            {createField(\"Skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>About me:</b> \r\n            {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts: </b> {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={p.changeContact}>\r\n                    <b>{key}:{createField(key, \"contacts.\" + key, [], Input)}</b>\r\n                </div>\r\n            })}\r\n        </div>\r\n        <div className={p.saveBtn}>\r\n            <button>Save</button>\r\n        </div>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n    </form>\r\n}\r\n\r\nexport const ProfileReduxForm = reduxForm({\r\n    form: \"edit-profile\"\r\n})(ProfileForm)","import React, { useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport userPhoto from '../../../assets/images/user.png'\r\nimport { ProfileBlock } from './ProfileBlock';\r\nimport { ProfileReduxForm } from './ProfileForm';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        };\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(() => {\r\n            setEditMode(false);\r\n        });\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <div className={s.imgBlock}>\r\n                    <div className={s.mainPhoto}>\r\n                        <img src={profile.photos.large || userPhoto} />\r\n                    </div>\r\n                    <div className={s.changePhoto}>\r\n                        {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n                    </div>\r\n                </div>\r\n                <div className={s.infoBlock}>\r\n                    <div>\r\n                        <ProfileStatus status={status} updateStatus={updateStatus}/>\r\n                    </div>\r\n                    {editMode\r\n                    ? <ProfileReduxForm initialValues={profile} onSubmit={onSubmit} profile={profile}/>\r\n                    : <ProfileBlock profile={profile}\r\n                        isOwner={isOwner}\r\n                        changeToEditMode={() => { setEditMode(true) }} />\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator } from './../../../Utils/Validators/validators'\r\nimport { Textarea } from '../../common/FormControls/FormControls';\r\nimport s from './AddPostForm.module.css';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={s.postForm}>\r\n                <div className={s.postText}>\r\n                    <Field validate={[required, maxLength10]} component={Textarea} name={\"newPostText\"} placeholder='Type for a new post' />\r\n                </div>\r\n                <div className={s.addPostBtn}>\r\n                    <button>Add Post</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'addPost'\r\n})(AddPostForm);","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <div className={s.itemImg}>\r\n                <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRwDsQHhnxB6CE5KsiVJXF28ONLgdEy9t0ZBg&usqp=CAU' />\r\n                <div className={s.itemMessage}>\r\n                    {props.message}\r\n                </div>\r\n            </div>\r\n            <div className={s.itemLikes}>\r\n                <span><b>Likes: </b>{props.likesCounter}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport AddPostForm from './AddPostForm';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let PostElements = props.posts.map(p => <Post key={p.id}message={p.message} likesCounter={p.likesCounter} />);\r\n\r\n    let addPostText = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.postsBlock}>\r\n                <h3>My Posts</h3>\r\n                <AddPostForm onSubmit={addPostText} />\r\n            </div>\r\n            <div>\r\n                {PostElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import { addPostActionCreator } from '../../../Redux/ProfileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.ProfilePage.posts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto={props.savePhoto}\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n                saveProfile={props.saveProfile}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../../Redux/ProfileReducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    updateProfile() {\r\n        let userId = this.props.match.params.userId;\r\n\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId )\r\n            this.updateProfile();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                isOwner={!this.props.match.params.userId}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n                savePhoto={this.props.savePhoto}\r\n                saveProfile={this.props.saveProfile}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        profile: state.ProfilePage.profile,\r\n        status: state.ProfilePage.status,\r\n        authorizedUserId: state.Auth.userId,\r\n        isAuth: state.Auth.isAuth\r\n    })\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}